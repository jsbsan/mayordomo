' Gambas class file

Private fila As Integer
Private InformacionDibujar As String

Public Sub Form_Open()

    Me.Title = Application.Name & " version " & Application.Version
    recarga()

End

Public Sub ButtonMostrar_Click()

    Dim a, b As Integer

    Dim lineas, l As New String[]
    Dim salida As String
    Dim salidafinal As String
    Dim columnasiniciales, ultimocampo, ltmp As String

    Dim NombreEquipo As String

    Shell "wmctrl -lGpx" To salida

    Shell "hostname" To nombreEquipo

    nombreEquipo = Replace(nombreEquipo, "\n", "")

    'cada linea de salida, debe de cambiar la parte donde aparezca nombreequipo y a partir de ella sustituir espacios por _
    l = Split(salida, "\n")
    For Each ltmp In l
        b = InStr(ltmp, NombreEquipo)
        If b > 0 And comun.excluidos(ltmp) = False Then
            ultimocampo = Mid$(ltmp, b + Len(NombreEquipo) + 1, Len(ltmp))
            ultimocampo = Replace(ultimocampo, " ", "-")
            ltmp = Replace(ltmp, "         ", " ")
            salidafinal &= Mid$(ltmp, 1, b + Len(NombreEquipo)) & ultimocampo & "\n"
        Endif

    Next

    ' Print salidafinal

    columnasiniciales = "id" & "\t" & "A/C" & "\t" & "PID" & "\t" & "x1" & "\t" & "y1" & "\t" & "x2" & "\t" & "y2" & "\t" & "Ejecutable" & "\t" & "hostname" & "\t" & "titulo barra" & "\n"

    TextAreaSalida.text = columnasiniciales & salida

    salidafinal = Replace(salidafinal, "  ", " ")
    salidafinal = Replace(salidafinal, "  ", " ")
    salidafinal = Replace(salidafinal, "  ", " ")
    salidafinal = Replace(salidafinal, " ", "\t")

    'leer contenido

    comun.DefinirGridSinFormato(GridView1, columnasiniciales & salidafinal)

End

Public Sub ButtonGuardar_Click()

    Dim nombre As String

    nombre = InputBox("Nombre de Sección de trabajo:")

    If nombre = "" Then Return 'cancelada la opcion

    settings[nombre] = comun.volcarcontenido(GridView1) & "###" & Replace(TextAreaNotas.text, "\n", "@#@")

    Settings["seccionesExistentes"] = Settings["seccionesExistentes", ""] & nombre & "|"

    recarga()

End

Public Sub GridView1_DblClick()

    fila = GridView1.Rows.Selection[0] 'fila seleccionada
    Label2.text = GridView1[fila, 7].text & (": La ruta completa es...")
    'cargarcombobox con rutas de ficheros que coincidan con el programa...
    ComboBoxRuta.text = comun.carga(GridView1[fila, 7].text, GridView1[fila, 9].text) 'nombre de aplicacion y titulo de la ventana

    Frame1.Visible = True

End

Public Sub ButtonBoxRutaFichero_Click()

End

Public Sub ButtonAceptarRuta_Click()

    GridView1[fila, 9].text = ComboBoxRuta.text
    Frame1.Visible = False

End

Public Sub ButtonCancelarRuta_Click()

    Frame1.Visible = False

End

Public Sub recarga()

    Dim s As New String[]

    s = Split(Settings["seccionesExistentes"], "|")
    Try s.Delete(s.Count - 1) 'por si no hay secciones Existentes
    If Error Then
        Return
    Endif

    ListBox1.List = s 'carga las seccione existentes.
    TextAreaEspacioSeleccionado.text = ""
    TextAreaNotas.text = ""

End

Public Sub ButtonCargarSeleccionada_Click()

    Dim lineas As String[]
    Dim datos As String[]
    Dim ltmp As String
    Dim nombrePrograma, nombreDatos As String
    Dim ultimoId As String
    'leo los datos seleccionado

    If ListBox1.index <> -1 Then
        '  TextAreaEspacioSeleccionado.text = Replace(Settings[ListBox1.List[ListBox1.Index]], "|", "\n")

        lineas = Split(TextAreaEspacioSeleccionado.text, "\n")
        lineas.Delete(lineas.count - 1)
        For Each ltmp In lineas
            datos = Split(ltmp, "\t")

            ' crear la nueva vetnana
            nombrePrograma = Mid$(datos[4], 1, InStr(datos[4], ".") - 1)

            nombreDatos = datos[5]
            If nombredatos <> "" Then
                Shell nombreprograma & " \"" & nombreDatos & "\"" 'esperar hasta que se abra
            Else
                Shell nombrePrograma  'esperar hasta que se abra
            Endif
            Wait 1
            ultimoId = GestionVentanas.UltimoId()

            ' el ultimo a ñadido es el id que necesitamo
            'y a este le asignamos el tamaño de la ventana
            GestionVentanas.ColocarVentana(ultimoId, datos[0], datos[1], datos[2], datos[3])
        Next
    Else
        Message.Error("Seleccione un espacio de trabajo")
    Endif

End

Public Sub ButtonPapelera_Click()

    Dim a As Integer

    For a = 0 To 9
        GridView1[fila, a].text = ""
    Next
    Frame1.Visible = False

End

Public Sub ListBox1_Click()

    Dim informacionVentanas As String
    Dim datos As String
    Dim zonadeNota As Integer

    'Muestra la información de la seccion seleccionada
    datos = Settings[ListBox1.List[ListBox1.Index]]
    informacionVentanas = Mid$(datos, 1, InStr(datos, "###") - 1)

    zonadeNota = InStr(datos, "###")
    If zonadeNota > 0 Then
        TextAreaNotas.text = Replace(Mid$(datos, InStr(datos, "###") + 3, Len(datos)), "@#@", "\n")
    Endif

    TextAreaEspacioSeleccionado.text = Replace(informacionVentanas, "|", "\n")

    'dibujar como es la seccion
    InformacionDibujar = TextAreaEspacioSeleccionado.text
    DrawingArea1.Refresh()
    'Para empezar proceso de abrir aplicaciones y asignarle la ventana
    '  hay que pulsar el boton ButtonCargarSeleccionada

End

Public Sub LabelSeleccionarArchivo_MouseDown()

    If Dialog.OpenFile() Then
        'cancelado
    Else
        ComboBoxRuta.Text = Dialog.Path
    Endif

End

Public Sub TextAreaNotas_KeyPress()

End

Public Sub ButtonBorrarEspacio_Click()

    Dim respuesta As Integer

    Dim SeccionBorrar As String = ListBox1.List[ListBox1.Index]

    respuesta = Message.Question("Desea borrar el Espacio de Trabajo:\n" & SeccionBorrar, "Si", "Cancelar")

    If respuesta = 1 Then
        'borra información de la seccion
        Settings[ListBox1.List[ListBox1.Index]] = ""
        'borra la misma seccion

        Settings["seccionesExistentes"] = Replace(Settings["seccionesExistentes"], SeccionBorrar & "|", "")

        recarga() 'recarga los datos
    Endif

End

Public Sub dibujar(informacion As String)

    'Paint.Rectangle(10, 10, 100, 100)
    'Paint.Brush = Paint.Color(Color.red)
    'Paint.Fill(True)
    'Paint.stroke
    Dim lineasDatos As String[] = Split(informacion, "\n")
    Dim ltmp As String
    Dim coor As String[]
    Dim contador As Integer = -1

    Dim colores As Integer[] = [Color.red, Color.blue, Color.Green, Color.Pink, Color.orange, Color.Yellow, Color.cyan, Color.Gray]

    For Each ltmp In lineasDatos
        If Replace(ltmp, "\t", "") <> "" Then
            coor = Split(ltmp, "\t")

            Try Paint.Rectangle(Val(coor[0]), Val(coor[1]), Val(coor[2]), Val(coor[3]))
            contador += 1
            If contador > colores.Count Then contador = 0
            Paint.Brush = Paint.Color(Colores[contador])
            Paint.Fill(True)
            Paint.stroke
            Paint.Brush = Paint.Color(Color.yellow)
            Paint.Font.Size = 110 'al tener una escala muy pequeña (0.1,0,1) , hay que poner el tamaño de letra muy grande
            Paint.Text("[" & Str$(contador + 1) & "]", Val(coor[0]), Val(coor[1]), 100, 100)
            Paint.fill
            Paint.stroke
        Endif
    Next

End

Public Sub DrawingArea1_Draw()

    Paint.Reset
    Paint.Scale(0.1, 0.1)
    dibujar(InformacionDibujar)

End
